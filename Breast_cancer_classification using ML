import numpy as np
import pandas as pd
import sklearn.datasets
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report
Data Collection & processing
#loading datset
data=sklearn.datasets.load_breast_cancer()
print(data)
 #loading the data to a dataframe
 df = pd.DataFrame(data.data, columns=data.feature_names)
df.head()
df["diagnosis"]=data.target
 df.shape
df.info()
df.isnull().sum()
df.describe()
df["diagnosis"].value_counts()
1->Benign

0-> Malignant


df.groupby("diagnosis").mean()
# **splitting  the features and target**
X=df.drop(columns="diagnosis",axis=1)
Y=df["diagnosis"]
print(X)
print(Y)
# Splittind data into test &train
x_train,X_test,y_train,Y_test=train_test_split(X,Y,test_size=0.2,random_state=2)
print(X.shape,x_train.shape,X_test.shape)
# Model Training
# Logisitic regression
model= LogisticRegression()
model.fit(x_train,y_train)
# Model Evaluation
#accurcay score
x_train_pred=model.predict(x_train)
training_data_accuracy=accuracy_score(y_train,x_train_pred)
print(training_data_accuracy)
#accurcay score
x_test_pred=model.predict(X_test)
test_data_accuracy=accuracy_score(Y_test,x_test_pred)
print(" Accuracy on test data =", test_data_accuracy)
# building a predictive system
input_data = (13.54,14.36,87.46,566.3,0.09779,0.08129,0.06664,0.04781,0.1885,0.05766,0.2699,0.7886,2.058,23.56,0.008462,0.0146,0.02387,0.01315,0.0198,0.0023,15.11,19.26,99.7,711.2,0.144,0.1773,0.239,0.1288,0.2977,0.07259)

# change the input data to a numpy array
input_data_as_numpy_array = np.asarray(input_data)

# reshape the numpy array as we are predicting for one datapoint
input_data_reshaped = input_data_as_numpy_array.reshape(1,-1)

prediction = model.predict(input_data_reshaped)

if (prediction[0] == 0):
  print('The Breast cancer is Malignant')

else:
  print('The Breast Cancer is Benign')
